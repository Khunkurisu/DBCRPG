mob
	//List containing every macroed keyboard button.  Boolean value indicates whether or not the button is currently pressed.
	var/tmp/list/keyList = list("Space" = 0,"A" = 0, "B" = 0, "C" = 0, "D" = 0, "E" = 0, "F" = 0, "G" = 0, "H" = 0, "I" = 0, "J" = 0, "K" = 0, "L" = 0, "M" = 0, "N" = 0, "O" = 0, "P" = 0, "Q" = 0, "R" = 0, "S" = 0, "T" = 0, "U" = 0, "V" = 0, "W" = 0, "X" = 0, "Y" = 0, "Z" = 0, "0" = 0, "1" = 0, "2" = 0, "3" = 0, "4" = 0, "5" = 0, "6" = 0, "7" = 0, "8" = 0, "9" = 0)
	proc/keyTick()
		if(usr.ACTION_FLAG != 456 && usr.key)
			if(keyList["W"])
				if(keyList["A"])
					client.Northwest()
				else if(keyList["D"])
					client.Northeast()
				else client.North()
			else if(keyList["S"])
				if(keyList["A"])
					client.Southwest()
				else if(keyList["D"])
					client.Southeast()
				else client.South()
			else if(keyList["A"])
				if(keyList["W"])
					client.Northwest()
				else if(keyList["S"])
					client.Southwest()
				else client.West()
			else if(keyList["D"])
				if(keyList["W"])
					client.Northeast()
				else if(keyList["S"])
					client.Southeast()
				else client.East()
			if(keyList["North"])
				if(keyList["West"])
					client.Northwest()
				else if(keyList["East"])
					client.Northeast()
				else client.North()
			else if(keyList["South"])
				if(keyList["West"])
					client.Southwest()
				else if(keyList["East"])
					client.Southeast()
				else client.South()
			else if(keyList["West"])
				if(keyList["North"])
					client.Northwest()
				else if(keyList["South"])
					client.Southwest()
				else client.West()
			else if(keyList["East"])
				if(keyList["North"])
					client.Northeast()
				else if(keyList["South"])
					client.Southeast()
				else client.East()
			else if(keyList["Northwest"]) client.Northwest()
			else if(keyList["Northeast"]) client.Northeast()
			else if(keyList["Southwest"]) client.Southwest()
			else if(keyList["Southeast"]) client.Southeast()
			/*if(keyList["Space"])
				usr.Attack()
			if(keyList["K"])
				usr.Learn()*/
			spawn(MOVE_DELAY) keyTick()

	verb
		keyUp(k as text)
			set hidden = 1
			keyList[k] = 0
		keyDown(k as text)
			set hidden = 1
			keyList[k] = 1
			//if(keyList["P"])
				//usr:view_Updates(usr)